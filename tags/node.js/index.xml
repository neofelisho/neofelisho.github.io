<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>node.js on Neo&#39;s Blog</title>
    <link>https://neofelisho.github.io/tags/node.js/</link>
    <description>Recent content in node.js on Neo&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 29 Aug 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://neofelisho.github.io/tags/node.js/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Memo for Azure Function using Node.js</title>
      <link>https://neofelisho.github.io/blog/2018/2018-08-29-azure-function-using-node-js/</link>
      <pubDate>Wed, 29 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://neofelisho.github.io/blog/2018/2018-08-29-azure-function-using-node-js/</guid>
      <description> Reference  Install VSCode Extensino: Azure Node Essentials Azure Functions for Visual Studio Code Azure Functions JavaScript 開發人員指南 使用 Functions 在 Azure 儲存體佇列中新增訊息  </description>
    </item>
    
    <item>
      <title>Memo for Node.js</title>
      <link>https://neofelisho.github.io/blog/2018/2018-08-05-nodejs-getting-started/</link>
      <pubDate>Sun, 05 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://neofelisho.github.io/blog/2018/2018-08-05-nodejs-getting-started/</guid>
      <description>Stream EventEmitter Promise and Asynchronous Testing Linter Reference  Cheetsheet Create readable stream from object Debugging tests in VS Code Node.js v10.8.0 Documentation (FileSystem) 深入理解 Node.js Stream 内部机制 Node.js 教程 @ RUNOOB.COM Mocha getting started Command JavaScript Design Pattern 單元測試：Mocha、Chai 和 Sinon 测试框架 Mocha 实例教程 测试用例：mocha，should，istanbul 非同步程式碼之霧：Node.js 的事件迴圈與 EventEmitter [JS] 使用 ESLint 提高程式碼品質 淺入淺出 eslint 與實作 JavaScript: RegExp Measurement of Node.js execution time Node.js: console.timeLog([label][, &amp;hellip;data]) @use JSDoc Reading text and binary data with Node.</description>
    </item>
    
  </channel>
</rss>